#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# %%
"""
Created on Sun Feb 12 13:25:48 2017

@author: jonbaird

Even Fibonacci numbers
Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
"""
# %%============================================================================
# Function to create the fibonacci sequence
# ============================================================================


def fibonacci(limit=55.0):
    """
    returns the fibonacci sequence of length == size
    """
    sequence = [1, 1]
    index = 2
    while sequence[index - 2] + sequence[index - 1] < limit:
        sequence.append(sequence[index - 2] + sequence[index - 1])
        index += 1
    return sequence

# %% Function to sum even sequence members


def sum_even(sequence, size=4.0e6):
    """
    return the sum of the even-valued terms less than size
    """
    total = 0
    for number in sequence:
        if number % 2 == 0 and number < size:
            total = total + number
    return total

# %% Main Program
SEQ = fibonacci(limit=4e6)
SUM = sum_even(SEQ, 4e6)
print(SUM)
